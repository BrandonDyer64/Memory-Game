{"version":3,"sources":["components/Card.tsx","Utils.ts","components/Board.tsx","components/Modal.tsx","components/Button.tsx","components/ForkMe.tsx","components/Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/cardback.png"],"names":["suits","props","styles","useStyles","suit","value","length","className","root","isEnabled","disabled","onClick","flipper","isOpen","flipped","back","background","front","String","fromCharCode","makeStyles","width","height","userSelect","perspective","transition","transform","cursor","borderRadius","padding","backfaceVisibility","position","top","left","right","bottom","opacity","transformStyle","zIndex","CardBackImage","backgroundRepeat","backgroundSize","backgroundPosition","display","gridTemplate","justifyItems","alignItems","color","fontSize","gridArea","range","start","end","Array","fill","map","_","i","useState","disabledCards","setDisabledCards","openCardA","setOpenCardA","openCardB","setOpenCardB","numCards","sort","Math","random","cards","onWin","card","Card","includes","c","onMatch","onFail","onCardOpen","key","paddingTop","flexWrap","maxWidth","margin","justifyContent","content","children","backgroundColor","backdropFilter","fontFamily","fontWeight","border","borderBottom","href","target","rel","textDecoration","textAlign","lineHeight","overflow","boxShadow","Button","startOver","score","divider","ForkMe","flexDirection","marginRight","flex","modalContent","modalTitle","marginBottom","modalButton","Boolean","window","location","hostname","match","ReactDOM","render","boardKey","setBoardKey","config","startingScore","setScore","isWin","setIsWin","onReset","k","Navbar","Board","s","matchFailPoints","matchPoints","Modal","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"uNAIMA,EAAQ,CAAC,SAAK,SAAK,SAAK,UASf,WAACC,GACZ,IAAMC,EAASC,EAAU,IACnBC,EAAOJ,EAAMC,EAAMI,MAAQL,EAAMM,SAAW,SAMlD,OACI,yBACIC,UAAS,UAAKL,EAAOM,KAAZ,aAAqBP,EAAMQ,WAAaP,EAAOQ,UACxDC,QARQ,WACRV,EAAMQ,WACNR,EAAMU,YAQN,yBACIJ,UAAS,UAAKL,EAAOU,QAAZ,aAAwBX,EAAMY,SAClCZ,EAAMQ,YACPP,EAAOY,UAEX,yBAAKP,UAAWL,EAAOa,MACnB,yBAAKR,UAAWL,EAAOc,cAG3B,yBAAKT,UAAWL,EAAOe,OACnB,yBAAKV,UAAWL,EAAOE,MAAOA,GAC9B,yBAAKG,UAAWL,EAAOG,OAClBa,OAAOC,aAAa,GAAKlB,EAAMI,QAEpC,yBAAKE,UAAWL,EAAOE,MAAOA,OAOrCD,EAAYiB,YAAW,CAChCZ,KAAM,CACFa,MAAO,MACPC,OAAQ,OACRC,WAAY,OACZC,YAAa,IACbC,WACI,qEACJC,UAAW,gBACX,UAAW,CACPC,OAAQ,WAEZ,oBAAqB,CACjBX,WAAY,QACZY,aAAc,MACdC,QAAS,MACTC,mBAAoB,SACpBC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRb,OAAQ,SAGhBZ,SAAU,CACN0B,QAAS,MACTT,OAAQ,WAEZf,QAAS,CACLc,UAAW,gBACXD,WAAY,gBACZY,eAAgB,cAChBN,SAAU,WACVV,MAAO,OACPC,OAAQ,QAEZR,QAAS,CACLY,UAAW,kBACXC,OAAQ,UACR,UAAW,CACPW,OAAQ,GAEZ,WAAY,CACRA,OAAQ,IAGhBvB,KAAM,CACFW,UAAW,gBACXY,OAAQ,GAEZtB,WAAY,CACRA,WAAW,OAAD,OAASuB,IAAT,KACVC,iBAAkB,YAClBC,eAAgB,YAChBC,mBAAoB,SACpBrB,MAAO,OACPC,OAAQ,QAEZL,MAAO,CACH0B,QAAS,OACTC,aAAa,wHAKbC,aAAc,SACdC,WAAY,SACZpB,UAAW,mBAEftB,KAAM,CACF2C,MAAO,gBACPC,SAAU,MACV,gBAAiB,CACbC,SAAU,MAEd,eAAgB,CACZA,SAAU,OAGlB5C,MAAO,CACH4C,SAAU,KACVD,SAAU,SCjIX,SAASE,EAAMC,EAAeC,GACjC,OAAOC,MAAMD,EAAMD,GACdG,KAAK,GACLC,KAAI,SAACC,EAAGC,GAAJ,OAAUN,EAAQM,KAGxB,ICMQ,WAACxD,GACZ,IAAMC,EAASC,EAAU,IADI,EAGauD,mBAAmB,IAHhC,mBAGtBC,EAHsB,KAGPC,EAHO,OAIKF,oBAAU,GAJf,mBAItBG,EAJsB,KAIXC,EAJW,OAKKJ,oBAAU,GALf,mBAKtBK,EALsB,KAKXC,EALW,OAMbN,oBAAmB,iBAClB,GAAD,mBACLR,EAAM,EAAGjD,EAAMgE,SAAW,IADrB,YAELf,EAAM,EAAGjD,EAAMgE,SAAW,KDd/BC,MAAK,iBAAM,GAAMC,KAAKC,eCWrBC,EANsB,oBAazBV,EAAcrD,QAAU+D,EAAM/D,QAC9BL,EAAMqE,QAsBV,OACI,yBAAK/D,UAAWL,EAAOM,MAClB6D,EAAMd,KAAI,SAACgB,EAAMd,GAAP,OACP,kBAACe,EAAD,CACInE,MAAOkE,EACP1D,OAAQ4C,IAAMI,GAAaJ,IAAMM,EACjCtD,WAAYkD,EAAcc,SAAShB,GACnC9C,QAAS,kBA1BN,SAAC4D,GACZA,IAASV,IAETA,EAAY,EACZC,EAAaS,GACNR,EAAY,GACnBC,EAAaO,GACTF,EAAME,KAAUF,EAAMR,IACtBD,GAAiB,SAAAc,GAAC,4BAAQA,GAAR,CAAWH,EAAMV,OACnC5D,EAAM0E,WAEN1E,EAAM2E,WAGVd,EAAaS,GACbP,GAAc,KAWSa,CAAWpB,IAC1BqB,IAAKrB,SAOZtD,EAAYiB,YAAW,CAChCZ,KAAM,CACFmC,QAAS,OACTd,QAAS,GACTkD,WAAY,GACZC,SAAU,OACVC,SAAU,IACVC,OAAQ,OACRC,eAAgB,eAChB,QAAS,CACLD,OAAQ,uBClEL,WAACjF,GACZ,IAAMC,EAASC,EAAU,IACzB,OACI,yBAAKI,UAAWL,EAAOM,MACnB,yBAAKD,UAAWL,EAAOkF,SAAUnF,EAAMoF,YAKtClF,EAAYiB,YAAW,CAChCZ,KAAM,CACFuB,SAAU,WACVC,IAAK,EACLC,KAAM,EACNK,OAAQ,KACRjB,MAAO,QACPC,OAAQ,QACRqB,QAAS,OACTwC,eAAgB,SAChBrC,WAAY,UAEhBsC,QAAS,CACLvD,QAAS,YACTyD,gBAAiB,QACjBC,eAAgB,aAChB3D,aAAc,MCxBP,WAAC3B,GACZ,IAAMC,EAASC,EAAU,IACzB,OACI,4BAAQI,UAAWL,EAAOM,KAAMG,QAAS,kBAAMV,EAAMU,YAChDV,EAAMoF,WAKNlF,EAAYiB,YAAW,CAChCZ,KAAM,CACFgF,WAAY,UACZC,WAAY,OACZH,gBAAiB,QACjBI,OAAQ,OACRC,aAAc,oBACd/D,aAAc,EACdC,QAAS,WACTF,OAAQ,UACRF,WAAY,+BACZsB,MAAO,gBAEP,UAAW,CACPuC,gBAAiB,cC5Bd,WAACrF,GACZ,IAAMC,EAASC,EAAU,IACzB,OACI,0BAAMI,UAAWL,EAAOM,MACpB,uBACIoF,KAAK,+CACLC,OAAO,SACPC,IAAI,uBAHR,aAWC3F,EAAYiB,YAAW,CAChCZ,KAAM,CACF,OAAQ,CACJQ,WAAY,OACZ+B,MAAO,gBACPgD,eAAgB,OAChBP,WAAY,oBACZQ,UAAW,SACXP,WAAY,OACZ5D,QAAS,WACTmB,SAAU,OACViD,WAAY,OACZlE,SAAU,WACVN,WAAY,QAEhB,aAAc,CACVT,WAAY,QAEhB,2BAA4B,CACxBoE,QAAS,GACT/D,MAAO,OACPsB,QAAS,QACTZ,SAAU,WACVC,IAAK,EACLC,KAAM,EACNX,OAAQ,EACRN,WAAY,QAEhB,cAAe,CACXmB,OAAQ,EACRH,IAAK,QAET,4BAA6B,CACzBD,SAAU,WACVY,QAAS,QACTX,IAAK,EACLE,OAAQ,GACRb,MAAO,IACP6E,SAAU,SACV5E,OAAQ,IACRgB,OAAQ,KACR,MAAO,CACHjB,MAAO,IACPU,SAAU,WACVC,IAAK,GACLE,OAAQ,GACRR,UAAW,gBACXyE,UAAW,oCCvDZ,WAAClG,GACZ,IAAMC,EAASC,EAAU,IACzB,OACI,yBAAKI,UAAWL,EAAOM,MACnB,kBAAC4F,EAAD,CAAQzF,QAAS,kBAAMV,EAAMoG,cAA7B,cACA,wCAAcpG,EAAMqG,OACpB,0BAAM/F,UAAWL,EAAOqG,UACxB,kBAACC,EAAD,QAKCrG,EAAYiB,YAAW,CAChCZ,KAAM,CACFmC,QAAS,OACTtB,MAAO,OACPoF,cAAe,MACftB,eAAgB,aAChBrC,WAAY,SACZC,MAAO,QACPlB,QAAS,GACT,QAAS,CACL6E,YAAa,KAGrBH,QAAS,CACLI,KAAM,K,OCKDxG,EAAYiB,YAAW,CAChCZ,KAAM,CACF8E,gBAAiB,UACjBjE,MAAO,QACPC,OAAQ,SAEZsF,aAAc,CACV/E,QAAS,IAEbgF,WAAY,CACR7D,SAAU,GACV8D,aAAc,IAElBC,YAAa,CACThE,MAAO,gBACPpB,OAAQ,UACRqE,UAAW,WC7CCgB,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZZC,IAASC,OAAO,mBFCD,WACX,IAAMpH,EAASC,EAAU,IADR,EAEeuD,mBAAS,GAFxB,mBAEV6D,EAFU,KAEAC,EAFA,OAGS9D,mBAAS+D,EAAOC,eAHzB,mBAGVpB,EAHU,KAGHqB,EAHG,OAISjE,oBAAS,GAJlB,mBAIVkE,EAJU,KAIHC,EAJG,KAKXC,EAAU,WACZN,GAAY,SAAAO,GAAC,OAAIA,EAAI,KACrBJ,EAASF,EAAOC,eAChBG,GAAS,IAEb,OACI,yBAAKtH,UAAWL,EAAOM,MACnB,kBAACwH,EAAD,CAAQ1B,MAAOA,EAAOD,UAAWyB,IACjC,kBAACG,EAAD,CACIhE,SAAUwD,EAAOpD,MACjBS,IAAKyC,EACL3C,OAAQ,kBAAM+C,GAAS,SAAAO,GAAC,OAAIA,EAAIT,EAAOU,oBACvCxD,QAAS,kBAAMgD,GAAS,SAAAO,GAAC,OAAIA,EAAIT,EAAOW,gBACxC9D,MAAO,kBAAMuD,GAAS,MAEzBD,GACG,kBAACS,EAAD,KACI,yBAAK9H,UAAWL,EAAO0G,cACnB,yBAAKrG,UAAWL,EAAO2G,YAAvB,YACA,yBAAKtG,UAAWL,EAAO6G,YAAapG,QAASmH,GAA7C,mBEzBR,MAASQ,SAASC,eAAe,SDoIzC,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GAC/BA,EAAaC,iB,8HE5IzBC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.499ebb53.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport CardBackImage from \"../assets/cardback.png\";\r\n\r\nconst suits = [\"♦\", \"♣\", \"♥\", \"♠\"];\r\n\r\nexport interface Props {\r\n    value: number;\r\n    isOpen: boolean;\r\n    isEnabled: boolean;\r\n    onClick: () => void;\r\n}\r\n\r\nexport default (props: Props) => {\r\n    const styles = useStyles({});\r\n    const suit = suits[props.value % suits.length] || \"♠\";\r\n    const onClick = () => {\r\n        if (props.isEnabled) {\r\n            props.onClick();\r\n        }\r\n    };\r\n    return (\r\n        <div\r\n            className={`${styles.root} ${!props.isEnabled && styles.disabled}`}\r\n            onClick={onClick}\r\n        >\r\n            <div\r\n                className={`${styles.flipper} ${(props.isOpen ||\r\n                    !props.isEnabled) &&\r\n                    styles.flipped}`}\r\n            >\r\n                <div className={styles.back}>\r\n                    <div className={styles.background} />\r\n                </div>\r\n\r\n                <div className={styles.front}>\r\n                    <div className={styles.suit}>{suit}</div>\r\n                    <div className={styles.value}>\r\n                        {String.fromCharCode(65 + props.value)}\r\n                    </div>\r\n                    <div className={styles.suit}>{suit}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const useStyles = makeStyles({\r\n    root: {\r\n        width: \"8vh\",\r\n        height: \"12vh\",\r\n        userSelect: \"none\",\r\n        perspective: 1000,\r\n        transition:\r\n            \"perspective 0.5s cubic-bezier(.64,-0.57,.1,1), opacity 0.3s linear\",\r\n        transform: \"rotateY(0deg)\",\r\n        \"&:hover\": {\r\n            cursor: \"pointer\",\r\n        },\r\n        \"& $back, & $front\": {\r\n            background: \"#ffff\",\r\n            borderRadius: \"1vh\",\r\n            padding: \"1vh\",\r\n            backfaceVisibility: \"hidden\",\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            height: \"100%\",\r\n        },\r\n    },\r\n    disabled: {\r\n        opacity: \"20%\",\r\n        cursor: \"default\",\r\n    },\r\n    flipper: {\r\n        transform: \"rotateY(0deg)\",\r\n        transition: \"0.6s ease-out\",\r\n        transformStyle: \"preserve-3d\",\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    flipped: {\r\n        transform: \"rotateY(180deg)\",\r\n        cursor: \"default\",\r\n        \"& $back\": {\r\n            zIndex: 2,\r\n        },\r\n        \"& $front\": {\r\n            zIndex: 0,\r\n        },\r\n    },\r\n    back: {\r\n        transform: \"rotateY(0deg)\",\r\n        zIndex: 2,\r\n    },\r\n    background: {\r\n        background: `url(${CardBackImage})`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"100% 100%\",\r\n        backgroundPosition: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    front: {\r\n        display: \"grid\",\r\n        gridTemplate: `\r\n            \"s1 .  . \" auto\r\n            \".  vl . \" auto\r\n            \".  .  s2\" auto\r\n            / auto auto auto`,\r\n        justifyItems: \"center\",\r\n        alignItems: \"center\",\r\n        transform: \"rotateY(180deg)\",\r\n    },\r\n    suit: {\r\n        color: \"var(--accent)\",\r\n        fontSize: \"2vh\",\r\n        \"&:first-child\": {\r\n            gridArea: \"s1\",\r\n        },\r\n        \"&:last-child\": {\r\n            gridArea: \"s2\",\r\n        },\r\n    },\r\n    value: {\r\n        gridArea: \"vl\",\r\n        fontSize: \"3vh\",\r\n    },\r\n});\r\n","export function range(start: number, end: number): number[] {\r\n    return Array(end - start)\r\n        .fill(0)\r\n        .map((_, i) => start + i);\r\n}\r\n\r\nexport const shuffleArray = <T>(array: T[]): T[] =>\r\n    array.sort(() => 0.5 - Math.random());\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Card from \"./Card\";\r\nimport { shuffleArray, range } from \"../Utils\";\r\n\r\ninterface Props {\r\n    numCards: number;\r\n    onMatch: () => void;\r\n    onFail: () => void;\r\n    onWin: () => void;\r\n}\r\n\r\nexport default (props: Props) => {\r\n    const styles = useStyles({});\r\n\r\n    const [disabledCards, setDisabledCards] = useState<number[]>([]);\r\n    const [openCardA, setOpenCardA] = useState(-1);\r\n    const [openCardB, setOpenCardB] = useState(-1);\r\n    const [cards] = useState<number[]>(() =>\r\n        shuffleArray([\r\n            ...range(0, props.numCards / 2),\r\n            ...range(0, props.numCards / 2),\r\n        ])\r\n    );\r\n\r\n    if (disabledCards.length >= cards.length) {\r\n        props.onWin();\r\n    }\r\n\r\n    const onCardOpen = (card: number) => {\r\n        if (card === openCardA) return;\r\n\r\n        if (openCardA < 0) {\r\n            setOpenCardA(card);\r\n        } else if (openCardB < 0) {\r\n            setOpenCardB(card);\r\n            if (cards[card] === cards[openCardA]) {\r\n                setDisabledCards(c => [...c, card, openCardA]);\r\n                props.onMatch();\r\n            } else {\r\n                props.onFail();\r\n            }\r\n        } else {\r\n            setOpenCardA(card);\r\n            setOpenCardB(-1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.root}>\r\n            {cards.map((card, i) => (\r\n                <Card\r\n                    value={card}\r\n                    isOpen={i === openCardA || i === openCardB}\r\n                    isEnabled={!disabledCards.includes(i)}\r\n                    onClick={() => onCardOpen(i)}\r\n                    key={i}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const useStyles = makeStyles({\r\n    root: {\r\n        display: \"flex\",\r\n        padding: 20,\r\n        paddingTop: 50,\r\n        flexWrap: \"wrap\",\r\n        maxWidth: 1000,\r\n        margin: \"auto\",\r\n        justifyContent: \"space-evenly\",\r\n        \"& > *\": {\r\n            margin: \"calc(10px + 1vh)\",\r\n        },\r\n    },\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\ninterface Props {\r\n    children: any;\r\n}\r\n\r\nexport default (props: Props) => {\r\n    const styles = useStyles({});\r\n    return (\r\n        <div className={styles.root}>\r\n            <div className={styles.content}>{props.children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const useStyles = makeStyles({\r\n    root: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 9999,\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    content: {\r\n        padding: \"20px 40px\",\r\n        backgroundColor: \"#fff6\",\r\n        backdropFilter: \"blur(15px)\",\r\n        borderRadius: 10,\r\n    },\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\ninterface Props {\r\n    onClick: () => void;\r\n    children: any;\r\n}\r\n\r\nexport default (props: Props) => {\r\n    const styles = useStyles({});\r\n    return (\r\n        <button className={styles.root} onClick={() => props.onClick()}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport const useStyles = makeStyles({\r\n    root: {\r\n        fontFamily: \"Signika\",\r\n        fontWeight: \"bold\",\r\n        backgroundColor: \"white\",\r\n        border: \"none\",\r\n        borderBottom: \"3px solid #EEEEEE\",\r\n        borderRadius: 4,\r\n        padding: \"7px 12px\",\r\n        cursor: \"pointer\",\r\n        transition: \"background-color 0.1s linear\",\r\n        color: \"var(--accent)\",\r\n\r\n        \"&:hover\": {\r\n            backgroundColor: \"#F5F5F5\",\r\n        },\r\n    },\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport default (props: any) => {\r\n    const styles = useStyles({});\r\n    return (\r\n        <span className={styles.root}>\r\n            <a\r\n                href=\"https://github.com/BrandonDyer64/Memory-Game\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                Fork me\r\n            </a>\r\n        </span>\r\n    );\r\n};\r\n\r\nexport const useStyles = makeStyles({\r\n    root: {\r\n        \"& a \": {\r\n            background: \"#fff\",\r\n            color: \"var(--accent)\",\r\n            textDecoration: \"none\",\r\n            fontFamily: \"arial, sans-serif\",\r\n            textAlign: \"center\",\r\n            fontWeight: \"bold\",\r\n            padding: \"5px 20px\",\r\n            fontSize: \"1rem\",\r\n            lineHeight: \"2rem\",\r\n            position: \"relative\",\r\n            transition: \"0.5s\",\r\n        },\r\n        \"& a:hover \": {\r\n            background: \"#eee\",\r\n        },\r\n        \"& a::before, & a::after \": {\r\n            content: \"\",\r\n            width: \"100%\",\r\n            display: \"block\",\r\n            position: \"absolute\",\r\n            top: 1,\r\n            left: 0,\r\n            height: 1,\r\n            background: \"#fff\",\r\n        },\r\n        \"& a::after \": {\r\n            bottom: 1,\r\n            top: \"auto\",\r\n        },\r\n        \"@media (min-width: 200px)\": {\r\n            position: \"absolute\",\r\n            display: \"block\",\r\n            top: 0,\r\n            right: -10,\r\n            width: 150,\r\n            overflow: \"hidden\",\r\n            height: 150,\r\n            zIndex: 9999,\r\n            \"& a\": {\r\n                width: 200,\r\n                position: \"absolute\",\r\n                top: 20,\r\n                right: -60,\r\n                transform: \"rotate(45deg)\",\r\n                boxShadow: \"0px 0px 0px rgba(0, 0, 0, 0)\",\r\n            },\r\n        },\r\n    },\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Button from \"./Button\";\r\nimport ForkMe from \"./ForkMe\";\r\n\r\ninterface Props {\r\n    score: number;\r\n    startOver: () => void;\r\n}\r\n\r\nexport default (props: Props) => {\r\n    const styles = useStyles({});\r\n    return (\r\n        <nav className={styles.root}>\r\n            <Button onClick={() => props.startOver()}>Start Over</Button>\r\n            <span>Score: {props.score}</span>\r\n            <span className={styles.divider} />\r\n            <ForkMe />\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport const useStyles = makeStyles({\r\n    root: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n        color: \"white\",\r\n        padding: 10,\r\n        \"& > *\": {\r\n            marginRight: 10,\r\n        },\r\n    },\r\n    divider: {\r\n        flex: 1,\r\n    },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Board from \"./components/Board\";\r\nimport Modal from \"./components/Modal\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport config from \"./config.json\";\r\n\r\nexport default () => {\r\n    const styles = useStyles({});\r\n    const [boardKey, setBoardKey] = useState(0);\r\n    const [score, setScore] = useState(config.startingScore);\r\n    const [isWin, setIsWin] = useState(false);\r\n    const onReset = () => {\r\n        setBoardKey(k => k + 1);\r\n        setScore(config.startingScore);\r\n        setIsWin(false);\r\n    };\r\n    return (\r\n        <div className={styles.root}>\r\n            <Navbar score={score} startOver={onReset} />\r\n            <Board\r\n                numCards={config.cards}\r\n                key={boardKey}\r\n                onFail={() => setScore(s => s + config.matchFailPoints)}\r\n                onMatch={() => setScore(s => s + config.matchPoints)}\r\n                onWin={() => setIsWin(true)}\r\n            />\r\n            {isWin && (\r\n                <Modal>\r\n                    <div className={styles.modalContent}>\r\n                        <div className={styles.modalTitle}>You Win!</div>\r\n                        <div className={styles.modalButton} onClick={onReset}>\r\n                            Play Again\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: \"#00897B\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n    },\r\n    modalContent: {\r\n        padding: 10,\r\n    },\r\n    modalTitle: {\r\n        fontSize: 72,\r\n        marginBottom: 20,\r\n    },\r\n    modalButton: {\r\n        color: \"var(--accent)\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"right\",\r\n    },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === \"[::1]\" ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n            window.location.href\r\n        );\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null &&\r\n                    contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/cardback.78117eb5.png\";"],"sourceRoot":""}