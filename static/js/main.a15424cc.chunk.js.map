{"version":3,"sources":["components/Card.tsx","Utils.ts","components/Board.tsx","components/Modal.tsx","components/Button.tsx","components/ForkMe.tsx","components/Navbar.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/cardback.png"],"names":["suits","props","styles","useStyles","suit","value","length","className","root","isEnabled","disabled","onClick","flipper","isOpen","flipped","back","background","front","String","fromCharCode","makeStyles","width","height","userSelect","perspective","transition","transform","cursor","borderRadius","backdropFilter","padding","position","top","left","right","bottom","opacity","transformStyle","zIndex","CardBackImage","backgroundRepeat","backgroundSize","backgroundPosition","display","gridTemplate","justifyItems","alignItems","color","fontSize","gridArea","range","start","end","Array","fill","map","_","i","useState","numCards","sort","Math","random","cards","disabledCards","setDisabledCards","disableCard","card","c","openCardA","setOpenCardA","openCardB","setOpenCardB","onWin","cardComponents","Card","includes","onMatch","onFail","onCardOpen","key","paddingTop","flexWrap","maxWidth","margin","justifyContent","content","children","backgroundColor","fontFamily","fontWeight","border","borderBottom","href","target","rel","textDecoration","textAlign","lineHeight","overflow","boxShadow","Button","startOver","score","divider","ForkMe","flexDirection","marginRight","flex","modalContent","modalTitle","marginBottom","modalButton","Boolean","window","location","hostname","match","ReactDOM","render","boardKey","setBoardKey","config","startingScore","setScore","isWin","setIsWin","onReset","k","Navbar","Board","s","matchFailPoints","matchPoints","Modal","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a15424cc.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport CardBackImage from \"../assets/cardback.png\";\n\nconst suits = [\"♦\", \"♣\", \"♥\", \"♠\"];\n\nexport interface Props {\n    value: number;\n    isOpen: boolean;\n    isEnabled: boolean;\n    onClick: () => void;\n}\n\nexport default (props: Props) => {\n    const styles = useStyles({});\n    const suit = suits[props.value % suits.length] || \"♠\";\n    const onClick = () => {\n        if (props.isEnabled) {\n            props.onClick();\n        }\n    };\n    return (\n        <div\n            className={`${styles.root} ${!props.isEnabled && styles.disabled}`}\n            onClick={onClick}\n        >\n            <div\n                className={`${styles.flipper} ${(props.isOpen ||\n                    !props.isEnabled) &&\n                    styles.flipped}`}\n            >\n                <div className={styles.back}>\n                    <div className={styles.background} />\n                </div>\n\n                <div className={styles.front}>\n                    <div className={styles.suit}>{suit}</div>\n                    <div className={styles.value}>\n                        {String.fromCharCode(65 + props.value)}\n                    </div>\n                    <div className={styles.suit}>{suit}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport const useStyles = makeStyles({\n    root: {\n        width: \"8vh\",\n        height: \"12vh\",\n        userSelect: \"none\",\n        perspective: 1000,\n        transition:\n            \"perspective 0.5s cubic-bezier(.64,-0.57,.1,1), opacity 0.3s linear\",\n        transform: \"rotateY(0deg)\",\n        \"&:hover\": {\n            cursor: \"pointer\",\n        },\n        \"& $back, & $front\": {\n            background: \"#fff8\",\n            borderRadius: \"1vh\",\n            backdropFilter: \"blur(10px)\",\n            padding: \"1vh\",\n            //backfaceVisibility: \"hidden\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            height: \"100%\",\n        },\n    },\n    disabled: {\n        opacity: \"20%\",\n        cursor: \"default\",\n    },\n    flipper: {\n        transform: \"rotateY(0deg)\",\n        transition: \"0.6s ease-out\",\n        transformStyle: \"preserve-3d\",\n        position: \"relative\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    flipped: {\n        transform: \"rotateY(180deg)\",\n        cursor: \"default\",\n        \"& $back\": {\n            zIndex: 2,\n        },\n        \"& $front\": {\n            zIndex: 0,\n        },\n    },\n    back: {\n        transform: \"rotateY(0deg)\",\n        zIndex: 2,\n    },\n    background: {\n        background: `url(${CardBackImage})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"100% 100%\",\n        backgroundPosition: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n    },\n    front: {\n        display: \"grid\",\n        gridTemplate: `\n            \"s1 .  . \" auto\n            \".  vl . \" auto\n            \".  .  s2\" auto\n            / auto auto auto`,\n        justifyItems: \"center\",\n        alignItems: \"center\",\n        transform: \"rotateY(180deg)\",\n    },\n    suit: {\n        color: \"var(--accent)\",\n        fontSize: \"2vh\",\n        \"&:first-child\": {\n            gridArea: \"s1\",\n        },\n        \"&:last-child\": {\n            gridArea: \"s2\",\n        },\n    },\n    value: {\n        gridArea: \"vl\",\n        fontSize: \"3vh\",\n    },\n});\n","export function range(start: number, end: number): number[] {\n    return Array(end - start)\n        .fill(0)\n        .map((_, i) => start + i);\n}\n\nexport const shuffleArray = <T>(array: T[]): T[] =>\n    array.sort(() => 0.5 - Math.random());\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Card from \"./Card\";\nimport { shuffleArray, range } from \"../Utils\";\n\ninterface Props {\n    numCards: number;\n    onMatch: () => void;\n    onFail: () => void;\n    onWin: () => void;\n}\n\nexport default (props: Props) => {\n    const styles = useStyles({});\n\n    const [cards] = useState<number[]>(() =>\n        shuffleArray([\n            ...range(0, props.numCards / 2),\n            ...range(0, props.numCards / 2),\n        ])\n    );\n\n    const [disabledCards, setDisabledCards] = useState<number[]>([]);\n    const disableCard = (card: number) => setDisabledCards(c => [...c, card]);\n\n    const [openCardA, setOpenCardA] = useState(-1);\n    const [openCardB, setOpenCardB] = useState(-1);\n\n    if (disabledCards.length >= cards.length) {\n        props.onWin();\n    }\n\n    const onCardOpen = (card: number) => {\n        if (card === openCardA) return;\n\n        if (openCardA < 0) {\n            setOpenCardA(card);\n        } else if (openCardB < 0) {\n            setOpenCardB(card);\n            if (cards[card] === cards[openCardA]) {\n                disableCard(card);\n                disableCard(openCardA);\n                props.onMatch();\n            } else {\n                props.onFail();\n            }\n        } else {\n            setOpenCardA(card);\n            setOpenCardB(-1);\n        }\n    };\n\n    const cardComponents = cards.map((card, i) => (\n        <Card\n            value={card}\n            isOpen={i === openCardA || i === openCardB}\n            isEnabled={!disabledCards.includes(i)}\n            onClick={() => onCardOpen(i)}\n            key={i}\n        />\n    ));\n\n    return <div className={styles.root}>{cardComponents}</div>;\n};\n\nexport const useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        padding: 20,\n        paddingTop: 50,\n        flexWrap: \"wrap\",\n        maxWidth: 1000,\n        margin: \"auto\",\n        justifyContent: \"space-evenly\",\n        \"& > *\": {\n            margin: \"calc(10px + 1vh)\",\n        },\n    },\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\n\ninterface Props {\n    children: any;\n}\n\nexport default (props: Props) => {\n    const styles = useStyles({});\n    return (\n        <div className={styles.root}>\n            <div className={styles.content}>{props.children}</div>\n        </div>\n    );\n};\n\nexport const useStyles = makeStyles({\n    root: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        zIndex: 9999,\n        width: \"100vw\",\n        height: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    content: {\n        padding: \"20px 40px\",\n        backgroundColor: \"#fff6\",\n        backdropFilter: \"blur(15px)\",\n        borderRadius: 10,\n    },\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\n\ninterface Props {\n    onClick: () => void;\n    children: any;\n}\n\nexport default (props: Props) => {\n    const styles = useStyles({});\n    return (\n        <button className={styles.root} onClick={() => props.onClick()}>\n            {props.children}\n        </button>\n    );\n};\n\nexport const useStyles = makeStyles({\n    root: {\n        fontFamily: \"Signika\",\n        fontWeight: \"bold\",\n        backgroundColor: \"white\",\n        border: \"none\",\n        borderBottom: \"3px solid #EEEEEE\",\n        borderRadius: 4,\n        padding: \"7px 12px\",\n        cursor: \"pointer\",\n        transition: \"background-color 0.1s linear\",\n        color: \"var(--accent)\",\n\n        \"&:hover\": {\n            backgroundColor: \"#F5F5F5\",\n        },\n    },\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nexport default (props: any) => {\n    const styles = useStyles({});\n    return (\n        <span className={styles.root}>\n            <a\n                href=\"https://github.com/BrandonDyer64/Memory-Game\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                Fork me\n            </a>\n        </span>\n    );\n};\n\nexport const useStyles = makeStyles({\n    root: {\n        \"& a \": {\n            background: \"#fff\",\n            color: \"var(--accent)\",\n            textDecoration: \"none\",\n            fontFamily: \"arial, sans-serif\",\n            textAlign: \"center\",\n            fontWeight: \"bold\",\n            padding: \"5px 20px\",\n            fontSize: \"1rem\",\n            lineHeight: \"2rem\",\n            position: \"relative\",\n            transition: \"0.5s\",\n        },\n        \"& a:hover \": {\n            background: \"#eee\",\n        },\n        \"& a::before, & a::after \": {\n            content: \"\",\n            width: \"100%\",\n            display: \"block\",\n            position: \"absolute\",\n            top: 1,\n            left: 0,\n            height: 1,\n            background: \"#fff\",\n        },\n        \"& a::after \": {\n            bottom: 1,\n            top: \"auto\",\n        },\n        \"@media (min-width: 200px)\": {\n            position: \"absolute\",\n            display: \"block\",\n            top: 0,\n            right: -10,\n            width: 150,\n            overflow: \"hidden\",\n            height: 150,\n            zIndex: 9999,\n            \"& a\": {\n                width: 200,\n                position: \"absolute\",\n                top: 20,\n                right: -60,\n                transform: \"rotate(45deg)\",\n                boxShadow: \"0px 0px 0px rgba(0, 0, 0, 0)\",\n            },\n        },\n    },\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Button from \"./Button\";\nimport ForkMe from \"./ForkMe\";\n\ninterface Props {\n    score: number;\n    startOver: () => void;\n}\n\nexport default (props: Props) => {\n    const styles = useStyles({});\n    return (\n        <nav className={styles.root}>\n            <Button onClick={() => props.startOver()}>Start Over</Button>\n            <span>Score: {props.score}</span>\n            <span className={styles.divider} />\n            <ForkMe />\n        </nav>\n    );\n};\n\nexport const useStyles = makeStyles({\n    root: {\n        display: \"flex\",\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        color: \"white\",\n        padding: 10,\n        \"& > *\": {\n            marginRight: 10,\n        },\n    },\n    divider: {\n        flex: 1,\n    },\n});\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Board from \"./components/Board\";\nimport Modal from \"./components/Modal\";\nimport Navbar from \"./components/Navbar\";\nimport config from \"./config.json\";\n\nexport default () => {\n    const styles = useStyles({});\n    const [boardKey, setBoardKey] = useState(0);\n    const [score, setScore] = useState(config.startingScore);\n    const [isWin, setIsWin] = useState(false);\n    const onReset = () => {\n        setBoardKey(k => k + 1);\n        setScore(config.startingScore);\n        setIsWin(false);\n    };\n    return (\n        <div className={styles.root}>\n            <Navbar score={score} startOver={onReset} />\n            <Board\n                numCards={config.cards}\n                key={boardKey}\n                onFail={() => setScore(s => s + config.matchFailPoints)}\n                onMatch={() => setScore(s => s + config.matchPoints)}\n                onWin={() => setIsWin(true)}\n            />\n            {isWin && (\n                <Modal>\n                    <div className={styles.modalContent}>\n                        <div className={styles.modalTitle}>You Win!</div>\n                        <div className={styles.modalButton} onClick={onReset}>\n                            Play Again\n                        </div>\n                    </div>\n                </Modal>\n            )}\n        </div>\n    );\n};\n\nexport const useStyles = makeStyles({\n    root: {\n        backgroundColor: \"#00897B\",\n        width: \"100vw\",\n        height: \"100vh\",\n    },\n    modalContent: {\n        padding: 10,\n    },\n    modalTitle: {\n        fontSize: 72,\n        marginBottom: 20,\n    },\n    modalButton: {\n        color: \"var(--accent)\",\n        cursor: \"pointer\",\n        textAlign: \"right\",\n    },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cardback.78117eb5.png\";"],"sourceRoot":""}